{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","xIsTheNext","stepNumber","slice","length","calculateWinner","setState","endGame","concat","step","status","current","winner","moves","map","move","desc","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"wNAIA,SAASA,EAAOC,GACZ,OACI,wBACIC,UAAU,SACVC,QAASF,EAAME,QAFnB,SAIKF,EAAMG,Q,IAKbC,E,kKAEF,SAAaC,GAAI,IAAD,OACZ,OAAO,cAACN,EAAD,CACHI,MAAOG,KAAKN,MAAMO,QAAQF,GAC1BH,QAAS,WAAQ,EAAKF,MAAME,QAAQG,Q,oBAI5C,WACI,OACI,gCACI,sBAAKJ,UAAU,YAAf,UACKK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAEvB,sBAAKP,UAAU,YAAf,UACKK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAEvB,sBAAKP,UAAU,YAAf,UACKK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,a,GAzBnBC,IAAMC,WAgCpBC,E,kDACF,WAAYX,GAAQ,IAAD,8BACf,cAAMA,IACDY,MAAQ,CACTC,QAAS,CAAC,CACNN,QAASO,MAAM,GAAGC,KAAK,QAE3BC,YAAY,EACZC,WAAY,GAPD,E,+CAWnB,SAAYZ,GACR,IAAMQ,EAAUP,KAAKM,MAAMC,QAAQK,MAAM,EAAGZ,KAAKM,MAAMK,WAAa,GAE9DV,EADUM,EAAQA,EAAQM,OAAS,GACjBZ,QAAQW,QAC5BE,EAAgBb,IAAYA,EAAQF,GAChCE,EAAQF,IAAIC,KAAKe,SAAS,CAAEC,SAAS,KAG7Cf,EAAQF,GAAKC,KAAKM,MAAMI,WAAa,IAAM,IAC3CV,KAAKe,SAAS,CACVR,QAASA,EAAQU,OAAO,CAAC,CACrBhB,QAASA,KAEbS,YAAaV,KAAKM,MAAMI,WACxBC,WAAYJ,EAAQM,Y,oBAI5B,SAAOK,GACHlB,KAAKe,SAAS,CACVJ,WAAYO,EACZR,WAAaQ,EAAO,IAAO,M,oBAInC,WAAU,IAeFC,EAfC,OACCZ,EAAUP,KAAKM,MAAMC,QACrBa,EAAUb,EAAQP,KAAKM,MAAMK,YAC7BU,EAASP,EAAgBM,EAAQnB,SACjCqB,EAAQf,EAAQgB,KAAI,SAACL,EAAMM,GAC7B,IAAMC,EAAOD,EACT,eAAiBA,EACjB,mBACJ,OACI,6BAEI,wBAAQ5B,QAAS,kBAAM,EAAK8B,OAAOF,IAAnC,SAA2CC,SAcvD,OARIN,EADAE,EACSA,EAAS,oBAMT,iBAAmBrB,KAAKM,MAAMI,WAAa,IAAM,KAG1D,sBAAKf,UAAU,OAAf,UACI,qBAAKA,UAAU,aAAf,SACI,cAACG,EAAD,CACIG,QAASmB,EAAQnB,QACjBL,QAAS,SAACG,GAAD,OAAO,EAAK4B,YAAY5B,QAGzC,sBAAKJ,UAAU,YAAf,UACI,8BAAMwB,IACN,6BAAKG,c,GAxENnB,IAAMC,WAqFzB,SAASU,EAAgBb,GAWrB,IAVA,IAAM2B,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEF7B,EAAI,EAAGA,EAAI6B,EAAMf,OAAQd,IAAK,CACnC,kBAAkB6B,EAAM7B,GAAxB,GAAO8B,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAI9B,EAAQ4B,IAAM5B,EAAQ4B,KAAO5B,EAAQ6B,IAAM7B,EAAQ4B,KAAO5B,EAAQ8B,GAClE,OAAO9B,EAAQ4B,GAGvB,OAAO,KArBXG,IAASC,OACL,cAAC5B,EAAD,IACA6B,SAASC,eAAe,W","file":"static/js/main.ae6913de.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n    return (\r\n        <button\r\n            className=\"square\"\r\n            onClick={props.onClick}\r\n        >\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n\r\nclass Board extends React.Component {\r\n\r\n    renderSquare(i) {\r\n        return <Square\r\n            value={this.props.squares[i]}\r\n            onClick={() => { this.props.onClick(i) }}\r\n        />;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [{\r\n                squares: Array(9).fill(null),\r\n            }],\r\n            xIsTheNext: true,\r\n            stepNumber: 0,\r\n        };\r\n    }\r\n\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        if (calculateWinner(squares) || squares[i]) {\r\n            if (squares[i]) this.setState({ endGame: true })\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsTheNext ? 'X' : 'O';\r\n        this.setState({\r\n            history: history.concat([{\r\n                squares: squares,\r\n            }]),\r\n            xIsTheNext: !this.state.xIsTheNext,\r\n            stepNumber: history.length\r\n        })\r\n    }\r\n\r\n    jumpTo(step) {\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsTheNext: (step % 2) === 0,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = calculateWinner(current.squares);\r\n        const moves = history.map((step, move) => {\r\n            const desc = move ?\r\n                'Go to move #' + move :\r\n                'Restart the game';\r\n            return (\r\n                <li>\r\n                    {/* <li key={move}></li> */}\r\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n                </li>\r\n            );\r\n        });\r\n        var status;\r\n        if (winner) {\r\n            status = winner + ' is the winner!!!';\r\n        }\r\n        // else if (endGame(this.state.current)) {\r\n        //     status = 'Deuce - no winner';\r\n        // }\r\n        else {\r\n            status = 'Next player: ' + (this.state.xIsTheNext ? 'X' : 'O');\r\n        }\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board\r\n                        squares={current.squares}\r\n                        onClick={(i) => this.handleClick(i)}\r\n                    />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{status}</div>\r\n                    <ol>{moves}</ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction endGame(squares) {\r\n    for (let i = 0; i < squares.length; i++) {\r\n        if (squares[i] == null) return false;\r\n    }\r\n    return true;\r\n}"],"sourceRoot":""}